// CeruleanIR Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// skip over library functions 

    jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
__builtin__print__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int32 intToPrint);
__builtin__print__int32:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints an int to the screen
// void print (int64 intToPrint);
__builtin__print__int64:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float32 floatToPrint);
__builtin__print__float32:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float64 floatToPrint);
__builtin__print__float64:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
__builtin__print__char:
    // grab char
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
__builtin__print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
__builtin__println__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void println (int32 intToPrint);
__builtin__println__int32:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void println (int64 intToPrint);
__builtin__println__int64:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float32 floatToPrint);
__builtin__println__float32:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float64 floatToPrint);
__builtin__println__float64:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
__builtin__println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
__builtin__println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
__builtin__println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
__builtin__input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
__builtin__exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int32 exit_code)
// - exit_code : 
__builtin__exit__int32:
    // ** not implemented for amyasm
    halt

//========================================================================
// returns default float32 value
// float32 float32 ();
__builtin__float32:
    return 0.0

//========================================================================
// returns default float64 value
// float64 float64 ();
__builtin__float64:
    return 0.0

//========================================================================
// converts int32 to float32
// float32 int32ToFloat32 (int32);
__builtin__int32ToFloat32__int32:
    stackget val 0
    itof res val
    return res

//========================================================================
// converts int64 to float64
// float64 int64ToFloat64 (int64);
__builtin__int64ToFloat64__int64:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float32 from a given char[]
// float32 stringToFloat32 (char[]);
__builtin__stringToFloat32__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// parses a float64 from a given char[]
// float64 stringToFloat64 (char[]);
__builtin__stringToFloat64__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int32 value
// int32 int32 ();
__builtin__int32:
    return 0

//========================================================================
// returns default int64 value
// int64 int64 ();
__builtin__int64:
    return 0

//========================================================================
// returns default char value
// char char ();
__builtin__char:
    return '0'

//========================================================================
// converts float32 to int32
// int32 float32ToInt32 (float32);
__builtin__float32ToInt32__float32:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// converts float64 to int64
// int64 float64ToInt64 (float64);
__builtin__float64ToInt64__float64:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int32 from a given char[]
// int32 stringToInt32 (char[]);
__builtin__stringToInt32__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int64 from a given char[]
// int64 stringToInt64 (char[]);
__builtin__stringToInt64__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int32 from a given char
// int32 charToInt32 (char);
__builtin__charToInt32__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// parses an int64 from a given char
// int64 charToInt64 (char);
__builtin__charToInt64__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
__builtin__string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
__builtin__string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
__builtin__null:
    return __null

//========================================================================

__endOfLibrary:
   JUMP __end____main____main
__main____main:
__main__main__entry:
   LT __main__main__clt0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__clt0
   CALL __builtin__println__int32
   POP _arg0
   LT __main__main__clt1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__clt1
   CALL __builtin__println__int32
   POP _arg0
   LT __main__main__clt2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__clt2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   LE __main__main__cle0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cle0
   CALL __builtin__println__int32
   POP _arg0
   LE __main__main__cle1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cle1
   CALL __builtin__println__int32
   POP _arg0
   LE __main__main__cle2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'l'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '<'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cle2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   GT __main__main__cgt0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cgt0
   CALL __builtin__println__int32
   POP _arg0
   GT __main__main__cgt1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cgt1
   CALL __builtin__println__int32
   POP _arg0
   GT __main__main__cgt2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 't'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 't'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] ' '
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cgt2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   GE __main__main__cge0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cge0
   CALL __builtin__println__int32
   POP _arg0
   GE __main__main__cge1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cge1
   CALL __builtin__println__int32
   POP _arg0
   GE __main__main__cge2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'g'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'g'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '>'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cge2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   EQUAL __main__main__ceq0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'e'
   ASSIGN __str[3] 'q'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'e'
   ASSIGN __str[10] 'q'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '='
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__ceq0
   CALL __builtin__println__int32
   POP _arg0
   EQUAL __main__main__ceq1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'e'
   ASSIGN __str[3] 'q'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'e'
   ASSIGN __str[10] 'q'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '='
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__ceq1
   CALL __builtin__println__int32
   POP _arg0
   EQUAL __main__main__ceq2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'e'
   ASSIGN __str[3] 'q'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'e'
   ASSIGN __str[10] 'q'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '='
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__ceq2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   NEQUAL __main__main__cne0, 7, 9
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'n'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '0'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'n'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '9'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '!'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '9'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cne0
   CALL __builtin__println__int32
   POP _arg0
   NEQUAL __main__main__cne1, 9, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'n'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '1'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'n'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '9'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '9'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '!'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cne1
   CALL __builtin__println__int32
   POP _arg0
   NEQUAL __main__main__cne2, 7, 7
   MALLOC __str 47
   ASSIGN __str[0] '%'
   ASSIGN __str[1] 'c'
   ASSIGN __str[2] 'n'
   ASSIGN __str[3] 'e'
   ASSIGN __str[4] '2'
   ASSIGN __str[5] ' '
   ASSIGN __str[6] '='
   ASSIGN __str[7] ' '
   ASSIGN __str[8] 'c'
   ASSIGN __str[9] 'n'
   ASSIGN __str[10] 'e'
   ASSIGN __str[11] ' '
   ASSIGN __str[12] '('
   ASSIGN __str[13] 'i'
   ASSIGN __str[14] 'n'
   ASSIGN __str[15] 't'
   ASSIGN __str[16] '3'
   ASSIGN __str[17] '2'
   ASSIGN __str[18] '('
   ASSIGN __str[19] '7'
   ASSIGN __str[20] ')'
   ASSIGN __str[21] ','
   ASSIGN __str[22] ' '
   ASSIGN __str[23] 'i'
   ASSIGN __str[24] 'n'
   ASSIGN __str[25] 't'
   ASSIGN __str[26] '3'
   ASSIGN __str[27] '2'
   ASSIGN __str[28] '('
   ASSIGN __str[29] '7'
   ASSIGN __str[30] ')'
   ASSIGN __str[31] ')'
   ASSIGN __str[32] ' '
   ASSIGN __str[33] '='
   ASSIGN __str[34] ' '
   ASSIGN __str[35] '('
   ASSIGN __str[36] '7'
   ASSIGN __str[37] ' '
   ASSIGN __str[38] '!'
   ASSIGN __str[39] '='
   ASSIGN __str[40] ' '
   ASSIGN __str[41] '7'
   ASSIGN __str[42] ')'
   ASSIGN __str[43] ' '
   ASSIGN __str[44] '='
   ASSIGN __str[45] ' '
   ASSIGN __str[46] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__cne2
   CALL __builtin__println__int32
   POP _arg0
   CALL __builtin__println
   ASSIGN __main__main__a 7
   ASSIGN __main__main__b 9
   LT __main__main__cmp, __main__main__a, __main__main__b
   CMP __main__main__cmp, 1 // set flag if cmp is true
   JEQ __main__main__if_then // jump to true block
   JUMP __main__main__else // otherwise jump to false block
__main__main__if_then:
   PUSH __main__main__a
   CALL __builtin__print__int32
   POP _arg0
   MALLOC __str 4
   ASSIGN __str[0] ' '
   ASSIGN __str[1] '<'
   ASSIGN __str[2] ' '
   ASSIGN __str[3] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__b
   CALL __builtin__println__int32
   POP _arg0
   JUMP __main__main__end_if
__main__main__else:
   PUSH __main__main__a
   CALL __builtin__print__int32
   POP _arg0
   MALLOC __str 5
   ASSIGN __str[0] ' '
   ASSIGN __str[1] '>'
   ASSIGN __str[2] '='
   ASSIGN __str[3] ' '
   ASSIGN __str[4] '\0'
   PUSH __str
   CALL __builtin__print__char__1
   POP _arg0
   PUSH __main__main__b
   CALL __builtin__println__int32
   POP _arg0
   JUMP __main__main__end_if
__main__main__end_if:
   RETURN 0
   RETURN 0
__end____main____main:
__start:
   CALL __main____main
   HALT
