   MALLOC __str 14
   ASSIGN __str[0] 'H'
   ASSIGN __str[1] 'e'
   ASSIGN __str[2] 'l'
   ASSIGN __str[3] 'l'
   ASSIGN __str[4] 'o'
   ASSIGN __str[5] ','
   ASSIGN __str[6] ' '
   ASSIGN __str[7] 'W'
   ASSIGN __str[8] 'o'
   ASSIGN __str[9] 'r'
   ASSIGN __str[10] 'l'
   ASSIGN __str[11] 'd'
   ASSIGN __str[12] '!'
   ASSIGN __str[13] '\0'
   MALLOC __main__customary_greeting 1
   ASSIGN __main__customary_greeting[0] __str
   MALLOC __main__length 1
   ASSIGN __main__length[0] 14
   JUMP __end____main____print_greeting__ptr__int32
__main____print_greeting__ptr__int32:
   STACKGET __main__print_greeting__greeting 0
   STACKGET __main__print_greeting__length 1
__main__print_greeting__entry:
   MALLOC __main__print_greeting__i_ptr 1
   ASSIGN __main__print_greeting__i_ptr[0] 0
   JUMP __main__print_greeting__for_cond
__main__print_greeting__for_cond:
   ASSIGN __main__print_greeting__i_curr __main__print_greeting__i_ptr[0]
   CMP __main__print_greeting__i_curr, __main__print_greeting__length
   JGE __main__print_greeting__for_end
   JUMP __main__print_greeting__for_body
__main__print_greeting__for_body:
   ASSIGN __main__print_greeting__char __main__print_greeting__greeting[__main__print_greeting__i_curr]
   PUSH __main__print_greeting__char
   CALL __builtin__print__char
   POP _arg0
   JUMP __main__print_greeting__for_update
__main__print_greeting__for_update:
   ADD __main__print_greeting__i_next __main__print_greeting__i_curr 1
   ASSIGN __main__print_greeting__i_ptr[0] __main__print_greeting__i_next
   JUMP __main__print_greeting__for_cond
__main__print_greeting__for_end:
   CALL __builtin__println
   RETURN 0
   RETURN 0
__end____main____print_greeting__ptr__int32:
   JUMP __end____main____main
__main____main:
__main__main__entry:
   ASSIGN __main__main__0 __main__customary_greeting[0]
   ASSIGN __main__main__1 __main__length[0]
   PUSH __main__main__1
   PUSH __main__main__0
   CALL __main____print_greeting__ptr__int32
   POP _arg0
   POP _arg1
   RETURN 0
   RETURN 0
__end____main____main:
__start:
   CALL __main____main
   HALT
