global @pie.ptr = value (float32(3.14))
function int32 @main () {
    block entry {
        %0 = add (int32(1), int32(2))
        %x = value (int32(%0))
        %1 = call @__builtin__println__int32 (int32(%x))
        %2 = mul (int32(%x), int32(10))
        %y.ptr = alloca (type(int32), int32(1))
        store (ptr(%y.ptr), int32(0), int32(%2))
        %3 = load (type(int32), ptr(%y.ptr), int32(0))
        %4 = call @__builtin__println__int32 (int32(%3))
        %5 = load (type(int32), ptr(%y.ptr), int32(0))
        %6 = add (int32(%x), int32(%5))
        %7 = mod (int32(%6), int32(3))
        store (ptr(%y.ptr), int32(0), int32(%7))
        store (ptr(%y.ptr), int32(0), int32(%7))
        store (ptr(@pie.ptr), int32(0), float32(13.37))
        %8 = load (type(float32), ptr(@pie.ptr), int32(0))
        %9 = call @__builtin__println__float32 (float32(%8))
    }
}

